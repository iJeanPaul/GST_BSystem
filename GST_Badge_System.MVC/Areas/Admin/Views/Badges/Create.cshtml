@model GST_Badge_System.Model.Badge

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"/>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="admin-title">
            <h1>Create A New Badge</h1>
        </div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Badge_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Badge_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Badge_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Badge_Descript, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Badge_Descript, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Badge_Descript, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Badge_Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Badge_Notes, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Badge_Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Badge_ActivateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Badge_ActivateDate, new { htmlAttributes = new { @class = "form-control needdatepicker" } })
                @Html.ValidationMessageFor(model => model.Badge_ActivateDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Badge_RetireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Badge_RetireDate, new { htmlAttributes = new { @class = "form-control needdatepicker" } })
                @Html.ValidationMessageFor(model => model.Badge_RetireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Badge_Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Badge_Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Badge_Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Badge Type:</label>
            <div class="col-md-10">
                @Html.DropDownList("selectedBadgeType", (SelectList)ViewBag.badgesTypeListItems, "--- Select Badge Type ---", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Badge Give Type:</label>
            <div class="col-md-10">
                @Html.DropDownList("selectedBadgeGiveType", (SelectList)ViewBag.badgesGiveTypeListItems, "--- Select Badge Give Type ---", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Badge Status:</label>
            <div class="col-md-10">
                @Html.DropDownList("selectedStatus", (SelectList)ViewBag.statusListItems, "--- Select Badge Status ---", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("< Back to List", "Index", null, new { @class = "btn btn-default"})
</div>

<script type="text/javascript">
    $(function () {
        $(".needdatepicker").datepicker();
    });
</script>
